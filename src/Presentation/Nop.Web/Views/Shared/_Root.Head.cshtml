@using Nop.Core.Configuration
@using Nop.Core.Domain.Common
@using Nop.Core.Domain.Seo
@using Nop.Services.Security
@using Nop.Core.Events

@inject CommonSettings commonSettings
@inject IEventPublisher eventPublisher
@inject IPermissionService permissionService
@inject SeoSettings seoSettings
@inject AppSettings appSettings

@{

    //custom tag(s);
    if (!string.IsNullOrEmpty(seoSettings.CustomHeadTags))
    {
        Html.AppendHeadCustomParts(seoSettings.CustomHeadTags);
    }

    var displayMiniProfiler = appSettings.Get<CommonConfig>().MiniProfilerEnabled && await permissionService.AuthorizeAsync(StandardPermissionProvider.AccessProfiling);

    //event
    await eventPublisher.PublishAsync(new PageRenderingEvent(this.Html));
}
<!DOCTYPE html>
<html lang="@CultureInfo.CurrentUICulture.TwoLetterISOLanguageName" dir="@Html.GetUIDirection(!await Html.ShouldUseRtlThemeAsync())" @Html.NopPageCssClasses()>
<head>
    <title>@Html.NopTitle()</title>
    <meta http-equiv="Content-type" content="text/html;charset=UTF-8" />
    <meta name="description" content="@(Html.NopMetaDescription())" />
    <meta name="keywords" content="@(Html.NopMetaKeywords())" />
    <meta name="generator" content="nopCommerce" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    @Html.NopHeadCustom()
    @*This is used so that themes can inject content into the header*@
    @await Html.PartialAsync("Head")

    @Html.NopCssFiles(ResourceLocation.Head)
    <style-bundle /> @* bundle tag must be below other link tags *@

    @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.HeadHtmlTag })
    @Html.NopCanonicalUrls()
    @await Component.InvokeAsync("NewsRssHeaderLink")
    @await Component.InvokeAsync("BlogRssHeaderLink")
    @*Insert favicon and app icons head code*@
    @await Component.InvokeAsync("Favicon")
    @if (displayMiniProfiler)
    {
        <mini-profiler />
    }
    @Html.NopScripts(ResourceLocation.Head)
    @Html.NopInlineScripts(ResourceLocation.Head)
    <!--Powered by nopCommerce - https://www.nopCommerce.com-->
</head>
<body>
    @RenderBody()

    <script src="~/lib_npm/jquery/jquery.min.js"></script>
    @* when jQuery migrate script logging is active you will see the log in the browser console *@
    @if (commonSettings.JqueryMigrateScriptLoggingActive)
    {
        <script src="~/lib_npm/jquery-migrate/jquery-migrate.js"></script>
    }
    else
    {
        <script src="~/lib_npm/jquery-migrate/jquery-migrate.min.js"></script>
    }
    <script src="~/lib_npm/jquery-ui-dist/jquery-ui.min.js"></script>
    <script src="~/lib_npm/jquery-validation/jquery.validate.min.js"></script>
    <script src="~/lib_npm/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>


    <script src="~/js/public.countryselect.js"></script>
    <script src="~/js/public.ajaxcart.js"></script>
    <script src="~/js/public.common.js"></script>

    <!-- FooterScripts  -->
    <script-bundle />

    @Html.NopScripts(ResourceLocation.Footer)
    @Html.NopInlineScripts(ResourceLocation.Footer)
</body>
</html>