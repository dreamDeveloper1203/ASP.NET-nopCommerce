@model MeasureSearchModel

<div class="panel panel-default">
    <div class="panel-body">
        @await Html.PartialAsync("Table", new DataTablesModel
        {
            //TODO: need to configure "Add" button
            Name = "measureweight-grid",
            UrlRead = new DataUrl("Weights", "Measure", null),
            UrlUpdate = new DataUrl("WeightUpdate", "Measure", null),
            UrlDelete = new DataUrl("WeightDelete", "Measure", null),
            SearchButtonId = "search-resources",
            Length = Model.PageSize,
            LengthMenu = Model.AvailablePageSizes,
            ColumnCollection = new List<ColumnProperty>
            {
                new ColumnProperty(nameof(MeasureWeightModel.Name))
                {
                    Title = T("Admin.Configuration.Shipping.Measures.Weights.Fields.Name").Text,
                    Width = "300",
                    Editable = true,
                    EditType = EditType.String
                },
                new ColumnProperty(nameof(MeasureWeightModel.SystemKeyword))
                {
                    Title = T("Admin.Configuration.Shipping.Measures.Weights.Fields.SystemKeyword").Text,
                    Width = "200",
                    Editable = true,
                    EditType = EditType.String
                },
                new ColumnProperty(nameof(MeasureWeightModel.Ratio))
                {
                    Title = T("Admin.Configuration.Shipping.Measures.Weights.Fields.Ratio").Text,
                    Width = "200",
                    Editable = true,
                    EditType = EditType.Number
                },
                new ColumnProperty(nameof(MeasureWeightModel.DisplayOrder))
                {
                    Title = T("Admin.Configuration.Shipping.Measures.Weights.Fields.DisplayOrder").Text,
                    Width = "100",
                    Editable = true,
                    EditType = EditType.Number
                },
                new ColumnProperty(nameof(MeasureWeightModel.IsPrimaryWeight))
                {
                    Title = T("Admin.Configuration.Shipping.Measures.Weights.Fields.IsPrimaryWeight").Text,
                    Width = "100",
                    ClassName =  StyleColumn.CenterAll,
                    Render = new RenderBoolean()
                },
                new ColumnProperty(nameof(MeasureWeightModel.Id))
                {
                    Title = T("Admin.Configuration.Shipping.Measures.Weights.Fields.MarkAsPrimaryWeight").Text,
                    Width = "150",
                    ClassName =  StyleColumn.CenterAll,
                    Render = new RenderButtonCustom(StyleButton.Olive, "markAsPrimaryWeight", T("Admin.Configuration.Shipping.Measures.Weights.Fields.MarkAsPrimaryWeight").Text)
                },
                new ColumnProperty(nameof(MeasureWeightModel.Id))
                {
                    Title = T("Admin.Common.Edit").Text,
                    Width = "200",
                    ClassName =  StyleColumn.ButtonStyle,
                    Render = new RenderButtonsInlineEdit()
                },
                new ColumnProperty(nameof(MeasureWeightModel.Id))
                {
                    Title = T("Admin.Common.Delete").Text,
                    Width = "100",
                    ClassName =  StyleColumn.ButtonStyle,
                    Render = new RenderButtonRemove(T("Admin.Common.Delete").Text)
                }
            }
        })
        
        <button type="submit" class="btn btn-default" id="btnMarkAsPrimaryWeight" style="display:none" />
        <script>
        var selectedId;

        function markAsPrimaryWeight(id) {
            selectedId = id;
            $("#btnMarkAsPrimaryWeight").click();
        };

        $(document).ready(function () {
            $("#btnMarkAsPrimaryWeight-action-confirmation-submit-button").bind("click", function () {
                var postData = {
                    id: selectedId
                };
                addAntiForgeryToken(postData);
                $.ajax({
                    cache: false,
                    type: "POST",
                    url: "@(Url.Action("MarkAsPrimaryWeight", "Measure"))",
                    data: postData,
                    success: function (data) {
                        $('#measureweight-grid').DataTable().ajax.reload();
                    },
                    error: function (xhr, ajaxOptions, thrownError) {
                        $("#markAsPrimaryWeightAlert").click();
                    }
                });
                $('#btnMarkAsPrimaryWeight-action-confirmation').modal('toggle');
            });
        });
        </script>
    </div>
</div>
<nop-alert asp-alert-id="markAsPrimaryWeightAlert" asp-alert-message="@T(" Admin.Configuration.Shipping.Measures.Weights.MarkAsPrimaryWeight.Alert.FailedToUpdate")" />