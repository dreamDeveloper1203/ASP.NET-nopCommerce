@model CheckoutAttributeModel

@if (Model.Id > 0)
{
    <div class="panel-body">
        @*TODO display the following warning if values are not supported by selected attribute control type - 'Values are not required for this attribute control type'*@
        @await Html.PartialAsync("Table", new DataTablesModel
        {
            Name = "checkoutattributevalues-grid",
            UrlRead = new DataUrl("ValueList", "CheckoutAttribute", null),
            UrlDelete = new DataUrl("ValueDelete", "CheckoutAttribute", null),
            Length = Model.CheckoutAttributeValueSearchModel.PageSize,
            LengthMenu = Model.CheckoutAttributeValueSearchModel.AvailablePageSizes,
            Filters = new List<FilterParameter>
            {
                new FilterParameter(nameof(CheckoutAttributeValueSearchModel.CheckoutAttributeId), Model.CheckoutAttributeValueSearchModel.CheckoutAttributeId)
            },
            ColumnCollection = new List<ColumnProperty>
            {
                new ColumnProperty(nameof(CheckoutAttributeValueModel.Name))
                {
                    Title = T("Admin.Catalog.Attributes.CheckoutAttributes.Values.Fields.Name")
                },
                new ColumnProperty(nameof(CheckoutAttributeValueModel.PriceAdjustment))
                {
                    Title = T("Admin.Catalog.Attributes.CheckoutAttributes.Values.Fields.PriceAdjustment"),
                    Width = "200"
                },
                new ColumnProperty(nameof(CheckoutAttributeValueModel.WeightAdjustment))
                {
                    Title = T("Admin.Catalog.Attributes.CheckoutAttributes.Values.Fields.WeightAdjustment"),
                    Width = "200"
                },
                new ColumnProperty(nameof(CheckoutAttributeValueModel.IsPreSelected))
                {
                    Title = T("Admin.Catalog.Attributes.CheckoutAttributes.Values.Fields.IsPreSelected"),
                    Width = "100",
                    ClassName = StyleColumn.CenterAll,
                    Render = new RenderBoolean()
                },
                new ColumnProperty(nameof(CheckoutAttributeValueModel.DisplayOrder))
                {
                    Title = T("Admin.Catalog.Attributes.CheckoutAttributes.Values.Fields.DisplayOrder"),
                    Width = "100"
                },
                new ColumnProperty(nameof(CheckoutAttributeValueModel.Id))
                {
                    Title = T("Admin.Common.Edit"),
                    Width = "100",
                    ClassName = StyleColumn.ButtonStyle,
                    Render = new RenderCustom("renderColumnEdit")
                },
                new ColumnProperty(nameof(CheckoutAttributeValueModel.Id))
                {
                    Title = T("Admin.Common.Delete"),
                    Width = "100",
                    Render = new RenderButtonRemove(T("Admin.Common.Delete")){ Style = StyleButton.Default },
                    ClassName = StyleColumn.ButtonStyle
                }
            }
       })
    </div>

    <div class="panel-footer">
        <button type="submit" id="btnAddNewValue"
                onclick="javascript:OpenWindow('@(Url.Action("ValueCreatePopup", "CheckoutAttribute", new { checkoutAttributeId = Model.Id, btnId = "btnRefresh", formId = "checkoutattribute-form" }))', 800, 500, true); return false;"
                class="btn btn-primary">
            @T("Admin.Catalog.Attributes.CheckoutAttributes.Values.AddNew")
        </button>
        <input type="submit" id="btnRefresh" style="display: none" />
        <script>
            $(document).ready(function () {
                $('#btnRefresh').click(function () {
                    //refresh grid
                    $('#checkoutattributevalues-grid').DataTable().ajax.reload();

                    //return false to don't reload a page
                    return false;
                });
            });
        </script>
    </div>
}           
else
{
    <div class="panel-body">
        @T("Admin.Catalog.Attributes.CheckoutAttributes.Values.SaveBeforeEdit")
    </div>
}

<script>
    function renderColumnEdit(data, type, row, meta) {
        return '<button onclick=\"javascript:OpenWindow(\'@Url.Content("~/Admin/CheckoutAttribute/ValueEditPopup/")' + data + '?btnId=btnRefresh&formId=checkoutattribute-form\', 800, 400, true); return false;\" class="btn btn-default"><i class="fa fa-pencil"></i>@T("Admin.Common.Edit")</button>';
    }
</script>