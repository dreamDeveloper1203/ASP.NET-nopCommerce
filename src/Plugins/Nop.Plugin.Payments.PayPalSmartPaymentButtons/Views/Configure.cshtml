@model ConfigurationModel

@{
    Layout = "_ConfigurePlugin";
}

@await Component.InvokeAsync("StoreScopeConfiguration")

<form asp-controller="PayPalSmartPaymentButtons" asp-action="Configure" method="post">
    <div class="panel-group">
        <div class="panel panel-default">
            <div class="panel-body">
                <p>
                    You must set up your development environment to get OAuth 2.0 client ID and secret credentials for the sandbox and live environments.<br />
                    Follow these steps to generate REST API credentials:<br />
                    1. <a href="https://developer.paypal.com/developer/applications" target="_blank">Log into the Developer Dashboard</a> with your PayPal account credentials. If you don't have an account, you can click on the <b>sign up</b> option.<br />
                    2. On <b>My Apps & Credentials</b>, use the toggle to switch between live and sandbox testing apps.<br />
                    3. Navigate to the <b>REST API apps</b> section and click <b>Create App</b>.<br />
                    4. Type a name for your app and click <b>Create App</b>. The app details page opens and displays your credentials.<br />
                    5. Copy and save the client ID and secret for your app.<br />
                    6. Review your app details and save your app.<br />
                    <br />
                </p>
                <div class="form-group">
                    <div class="col-md-3">
                        <nop-override-store-checkbox asp-for="UseSandbox_OverrideForStore" asp-input="UseSandbox" asp-store-scope="@Model.ActiveStoreScopeConfiguration" />
                        <nop-label asp-for="UseSandbox" />
                    </div>
                    <div class="col-md-9">
                        <nop-editor asp-for="UseSandbox" />
                        <span asp-validation-for="UseSandbox"></span>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-3">
                        <nop-override-store-checkbox asp-for="ClientId_OverrideForStore" asp-input="ClientId" asp-store-scope="@Model.ActiveStoreScopeConfiguration" />
                        <nop-label asp-for="ClientId" />
                    </div>
                    <div class="col-md-9">
                        <nop-editor asp-for="ClientId" asp-required="true" />
                        <span asp-validation-for="ClientId"></span>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-3">
                        <nop-override-store-checkbox asp-for="SecretKey_OverrideForStore" asp-input="SecretKey" asp-store-scope="@Model.ActiveStoreScopeConfiguration" />
                        <nop-label asp-for="SecretKey" />
                    </div>
                    <div class="col-md-9">
                        <nop-editor asp-for="SecretKey" asp-required="true" asp-value="@Model.SecretKey" />
                        <span asp-validation-for="SecretKey"></span>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-3">
                        <nop-override-store-checkbox asp-for="PaymentTypeId_OverrideForStore" asp-input="PaymentTypeId" asp-store-scope="@Model.ActiveStoreScopeConfiguration" />
                        <nop-label asp-for="PaymentTypeId" />
                    </div>
                    <div class="col-md-9">
                        <nop-select asp-for="PaymentTypeId" asp-items="Model.PaymentTypes" />
                        <span asp-validation-for="PaymentTypeId"></span>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-3">
                        <nop-override-store-checkbox asp-for="ButtonsWidgetZones_OverrideForStore" asp-input="ButtonsWidgetZones" asp-store-scope="@Model.ActiveStoreScopeConfiguration" />
                        <nop-label asp-for="ButtonsWidgetZones" />
                    </div>
                    <div class="col-md-9">
                        <nop-select asp-for="ButtonsWidgetZones" asp-items="Model.AvailableButtonsWidgetZones" asp-multiple="true" />
                        <script>
                            $(document).ready(function() {
                                var input = $('#@Html.IdFor(model => model.ButtonsWidgetZones)').data("kendoMultiSelect");
                                input.setOptions({ autoClose: false, filter: "contains" });
                            });
                        </script>
                        <span asp-validation-for="ButtonsWidgetZones"></span>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-9 col-md-offset-3">
                        <input type="submit" name="save" class="btn btn-primary" value="@T("Admin.Common.Save")" />
                    </div>
                </div>
            </div>
        </div>
    </div>
</form>